name: Run build on push
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * 1,3,5"
env:
  VBUILD_UNIT_TESTS: false
  VCONAN_VER: 1.59.0
  # Would be nice if this value was set automagically when client-cpp is released and consumed everywhere
  VCLIENT_CPP_VER: 1.5.6
  VCONAN_BRANCH_VERSION: "True"
  # recipe should usually pull from 'main' but can be changed to a branch name if recipe changes are pending
  VCONAN_RECIPE_VER: main
jobs:

  run-build-ubuntu:
    runs-on: ubuntu-20.04
    timeout-minutes: 75
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Install Conan
        run: pip3 install conan==${{ env.VCONAN_VER }} --force

      - name: Check out client-cpp code
        uses: actions/checkout@v3
        with:
          repository: opentdf/client-conan
          ref: ${{ env.VCONAN_RECIPE_VER }}
          path: client-conan

      - name: Get client-cpp into conan local cache, built from repo if necessary
        run: |
          cd ${{ github.workspace }}
          cd client-conan
          conan create recipe/all opentdf-client/${{ env.VCLIENT_CPP_VER }}@ -pr:b=default --build=opentdf-client --build=missing -o opentdf-client:branch_version=${{ env.VCONAN_BRANCH_VERSION }}

      - name: Run build
        run: |
          cd ${{ github.workspace }}
          ./build-all.sh

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output-ubuntu
          retention-days: ${{ github.event_name == 'pull_request' && 3 || 90 }}
          path: |
            *.gz

      - run: echo "üçè This job's status is ${{ job.status }}."

  run-build-manylinux-aarch64:
    runs-on: ubuntu-latest
    needs: run-build-ubuntu

    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      
      - name: Check out repository code
        uses: actions/checkout@v3
    
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
    
      - name: Install Conan
        run: pip3 install conan==${{ env.VCONAN_VER }} --force
    
      - name: Check out client-cpp code
        uses: actions/checkout@v3
        with:
          repository: opentdf/client-conan
          ref: ${{ env.VCONAN_RECIPE_VER }}
          path: client-conan
    
      - name: Get client-cpp into conan local cache, built from repo if necessary
        run: |
          cd ${{ github.workspace }}
          cd client-conan
          conan create recipe/all opentdf-client/${{ env.VCLIENT_CPP_VER }}@ -pr:b=default --build=opentdf-client --build=missing -o opentdf-client:branch_version=${{ env.VCONAN_BRANCH_VERSION }}
    
      - name: Run build
        run: |
          cd ${{ github.workspace }}
          ./build-all.sh
    
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output-linux-aarch64
          retention-days: ${{ github.event_name == 'pull_request' && 3 || 90 }}
          path: |
            *.gz
    
      - run: echo "üçè This job's status is ${{ job.status }}."

     

      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
